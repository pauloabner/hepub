c
template_file
c
template_file
c
Util
self.template_file
metada
template_file
c
e
n
c
subject.to_s
subject
c
titlepage.tags
n
c
titlepage.tags
titlepage
n
c
titlepage
n
c
t = TitlePage.new(metadata: @metadata, template_file:template_dir + '/title-page.html')
c
t.to_s
t = TitlePage.new(metadata: @metadata, template_file:template_dir + '/title-page.html')
TitlePage.new(metadata: @metadata, template_file:template_dir + '/title-page.html')
title-page = TitlePage.new(metadata: @metadata, template_file:template_dir + '/title-page.html')
c
n
c
t.tags
t = TitlePage.new(metadata: @metadata, template_file:template_dir + '/title-page.html')
TitlePage.new(metadata: @metadata, template_file:template_dir + '/title-page.html')
template_dir
template_dir + '/title-page.html
@metadata
c
book.metadata
n
create_array
@title = nil
options[:title]
options
n
c
TitlePage.new(metadata: @metadata, template_file:template_dir + '/title-page.html')
c
filepath
c
@array
c
@array
c
filepath
filepath.nil? || !File.exist?(filepath)
c
filepath.nil? || !File.exist?(filepath)
filepath
c
filepath.nil? || !File.exist?(filepath)
filepath
c
filepath.nil? || !File.exist?(filepath)
filepath.nil?
filepath
File.exist?(filepath)
c
File.exist?('spec/fixtures/file_without_tags.html')
File.exist?('fixtures/file_without_tags.html')
!File.exist?('fixtures/file_without_tags.html')
File.exist?(filepath)
c
File.exist?(filepath)
exception
n
p 'ok' if filepath.nil? || !File.exist?(filepath)
if filepath.nil? || !File.exist?(filepath)
!File.exist?('fixtures/file_without_tags.html')
!File.exist?(filepath)
filepath.nil?
filepath
c
e
n
actual_error
n
p 'ok' if filepath.nil? || !File.exist?(filepath)
filepath.nil? || !File.exist?(filepath)
!File.exist?(filepath)
File.exist?(filepath)
c
File.exist?(filepath)
filepath
c
filepath
c
template_dir
"images/#{image}".gsub("#{template_dir}/",'')
c
builder[:book]
builder.book
builder.title
builder.source
builder.methods
builder.files
builder.ordered
builder.oredered
builder
builder.book
builde.book
